// Gimlet Sequencer API

Interface(
    name: "Sequencer",
    ops: {
        "get_state": (
            doc: "Return the power state",
            reply: Result(
                ok: (
                    type: "drv_gimlet_state::PowerState",
                    recv: FromPrimitive("u8"),
                ),
                err: CLike("SeqError"),
            ),
        ),
        "set_state": (
            doc: "Set the power state",
            args: {
                "state": (
                    type: "drv_gimlet_state::PowerState",
                    recv: FromPrimitive("u8"),
                )
            },
            reply: Result(
                ok: "()",
                err: CLike("SeqError"),
            ),
        ),
        "fans_on": (
            args: {},
            reply: Result(
                ok: "()",
                err: CLike("SeqError"),
            ),
        ),
        "fans_off": (
            args: {},
            reply: Result(
                ok: "()",
                err: CLike("SeqError"),
            ),
        ),
        "send_hardware_nmi": (
            doc: "Triggers a hardware NMI by toggling LPC_SMI_L",
            args: {},
            reply: Result(
                ok: "()",
                err: ServerDeath,
            ),
        ),
        "read_fpga_regs": (
            doc: "Raw read of the FPGA registers",
            args: {},
            reply: Result(
                ok: "[u8; 64]",
                err: CLike("SeqError"),
            ),
        ),
    },
)
